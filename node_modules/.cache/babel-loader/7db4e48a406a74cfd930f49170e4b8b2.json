{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Connection = void 0;\n\nvar address_1 = require(\"@celo/utils/lib/address\");\n\nvar sign_typed_data_utils_1 = require(\"@celo/utils/lib/sign-typed-data-utils\");\n\nvar signatureUtils_1 = require(\"@celo/utils/lib/signatureUtils\");\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar celo_provider_1 = require(\"./celo-provider\");\n\nvar abi_utils_1 = require(\"./utils/abi-utils\");\n\nvar formatter_1 = require(\"./utils/formatter\");\n\nvar provider_utils_1 = require(\"./utils/provider-utils\");\n\nvar rpc_caller_1 = require(\"./utils/rpc-caller\");\n\nvar tx_params_normalizer_1 = require(\"./utils/tx-params-normalizer\");\n\nvar tx_result_1 = require(\"./utils/tx-result\");\n\nvar debugGasEstimation = (0, debug_1.default)('connection:gas-estimation');\n\nvar Connection =\n/** @class */\nfunction () {\n  function Connection(web3, wallet, handleRevert) {\n    var _this = this;\n\n    if (handleRevert === void 0) {\n      handleRevert = true;\n    }\n\n    var _a;\n\n    this.web3 = web3;\n    this.wallet = wallet; // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n\n    this.currencyGasPrice = new Map();\n    /**\n     * Send a transaction to celo-blockchain.\n     *\n     * Similar to `web3.eth.sendTransaction()` but with following differences:\n     *  - applies kit tx's defaults\n     *  - estimatesGas before sending\n     *  - returns a `TransactionResult` instead of `PromiEvent`\n     */\n\n    this.sendTransaction = function (tx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var gas;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              tx = this.fillTxDefaults(tx);\n              tx = this.fillGasPrice(tx);\n              gas = tx.gas;\n              if (!(gas == null)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this.estimateGasWithInflationFactor(tx)];\n\n            case 1:\n              gas = _a.sent();\n              _a.label = 2;\n\n            case 2:\n              return [2\n              /*return*/\n              , (0, tx_result_1.toTxResult)(this.web3.eth.sendTransaction(__assign(__assign({}, tx), {\n                gas: gas\n              })))];\n          }\n        });\n      });\n    };\n\n    this.sendTransactionObject = function (txObj, tx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var gas, gasEstimator, getCallTx_1, caller;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              tx = this.fillTxDefaults(tx);\n              tx = this.fillGasPrice(tx);\n              gas = tx.gas;\n              if (!(gas == null)) return [3\n              /*break*/\n              , 2];\n\n              gasEstimator = function (_tx) {\n                return txObj.estimateGas(__assign({}, _tx));\n              };\n\n              getCallTx_1 = function (_tx) {\n                // @ts-ignore missing _parent property from TransactionObject type.\n                return __assign(__assign({}, _tx), {\n                  data: txObj.encodeABI(),\n                  to: txObj._parent._address\n                });\n              };\n\n              caller = function (_tx) {\n                return _this.web3.eth.call(getCallTx_1(_tx));\n              };\n\n              return [4\n              /*yield*/\n              , this.estimateGasWithInflationFactor(tx, gasEstimator, caller)];\n\n            case 1:\n              gas = _a.sent();\n              _a.label = 2;\n\n            case 2:\n              return [2\n              /*return*/\n              , (0, tx_result_1.toTxResult)(txObj.send(__assign(__assign({}, tx), {\n                gas: gas\n              })))];\n          }\n        });\n      });\n    };\n\n    this.signTypedData = function (signer, typedData) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var signature, messageHash;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , new Promise(function (resolve, reject) {\n                ;\n\n                _this.web3.currentProvider.send({\n                  id: (0, rpc_caller_1.getRandomId)(),\n                  jsonrpc: '2.0',\n                  method: 'eth_signTypedData',\n                  params: [(0, formatter_1.inputAddressFormatter)(signer), typedData]\n                }, function (error, resp) {\n                  if (error) {\n                    reject(error);\n                  } else if (resp) {\n                    resolve(resp.result);\n                  } else {\n                    reject(new Error('empty-response'));\n                  }\n                });\n              })];\n\n            case 1:\n              signature = _a.sent();\n              messageHash = (0, address_1.ensureLeading0x)((0, sign_typed_data_utils_1.generateTypedDataHash)(typedData).toString('hex'));\n              return [2\n              /*return*/\n              , (0, signatureUtils_1.parseSignatureWithoutPrefix)(messageHash, signature, signer)];\n          }\n        });\n      });\n    };\n\n    this.sign = function (dataToSign, address) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var signature;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , new Promise(function (resolve, reject) {\n                ;\n\n                _this.web3.currentProvider.send({\n                  id: (0, rpc_caller_1.getRandomId)(),\n                  jsonrpc: '2.0',\n                  method: 'eth_sign',\n                  params: [(0, formatter_1.inputAddressFormatter)(address.toString()), (0, formatter_1.inputSignFormatter)(dataToSign)]\n                }, function (error, resp) {\n                  if (error) {\n                    reject(error);\n                  } else if (resp) {\n                    resolve(resp.result);\n                  } else {\n                    reject(new Error('empty-response'));\n                  }\n                });\n              })];\n\n            case 1:\n              signature = _a.sent();\n              return [2\n              /*return*/\n              , signature];\n          }\n        });\n      });\n    };\n\n    this.sendSignedTransaction = function (signedTransactionData) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , (0, tx_result_1.toTxResult)(this.web3.eth.sendSignedTransaction(signedTransactionData))];\n        });\n      });\n    };\n\n    this.estimateGas = function (tx, gasEstimator, caller) {\n      if (gasEstimator === void 0) {\n        gasEstimator = _this.web3.eth.estimateGas;\n      }\n\n      if (caller === void 0) {\n        caller = _this.web3.eth.call;\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var gas, e_1, called, revertReason;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 4]);\n\n              return [4\n              /*yield*/\n              , gasEstimator(__assign({}, tx))];\n\n            case 1:\n              gas = _a.sent();\n              debugGasEstimation('estimatedGas: %s', gas.toString());\n              return [2\n              /*return*/\n              , gas];\n\n            case 2:\n              e_1 = _a.sent();\n              return [4\n              /*yield*/\n              , caller({\n                data: tx.data,\n                to: tx.to,\n                from: tx.from\n              })];\n\n            case 3:\n              called = _a.sent();\n              revertReason = 'Could not decode transaction failure reason';\n\n              if (called.startsWith('0x08c379a')) {\n                revertReason = (0, abi_utils_1.decodeStringParameter)(this.getAbiCoder(), called.substring(10));\n              }\n\n              debugGasEstimation('Recover transaction failure reason', {\n                called: called,\n                data: tx.data,\n                to: tx.to,\n                from: tx.from,\n                error: e_1,\n                revertReason: revertReason\n              });\n              return [2\n              /*return*/\n              , Promise.reject(\"Gas estimation failed: \" + revertReason + \" or \" + e_1)];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.estimateGasWithInflationFactor = function (tx, gasEstimator, caller) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var gas, _a, _b, e_2;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _c.trys.push([0, 2,, 3]);\n\n              _b = (_a = Math).round;\n              return [4\n              /*yield*/\n              , this.estimateGas(tx, gasEstimator, caller)];\n\n            case 1:\n              gas = _b.apply(_a, [_c.sent() * this.config.gasInflationFactor]);\n              debugGasEstimation('estimatedGasWithInflationFactor: %s', gas);\n              return [2\n              /*return*/\n              , gas];\n\n            case 2:\n              e_2 = _c.sent();\n              throw new Error(e_2);\n\n            case 3:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.chainId = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('net_version', [])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , parseInt(response.result.toString(), 10)];\n          }\n        });\n      });\n    };\n\n    this.getTransactionCount = function (address) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_getTransactionCount', [address, 'pending'])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.hexToNumber)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.nonce = function (address) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , this.getTransactionCount(address)];\n        });\n      });\n    };\n\n    this.coinbase = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_coinbase', [])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , response.result.toString()];\n          }\n        });\n      });\n    };\n\n    this.gasPrice = function (feeCurrency) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var parameter, response, gasPriceInHex;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              parameter = feeCurrency ? [feeCurrency] : [];\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_gasPrice', parameter)];\n\n            case 1:\n              response = _a.sent();\n              gasPriceInHex = response.result.toString();\n              return [2\n              /*return*/\n              , gasPriceInHex];\n          }\n        });\n      });\n    };\n\n    this.getBlockNumber = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_blockNumber', [])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.hexToNumber)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.isBlockNumberHash = function (blockNumber) {\n      return blockNumber instanceof String && blockNumber.indexOf('0x') === 0;\n    };\n\n    this.getBlock = function (blockHashOrBlockNumber, fullTxObjects) {\n      if (fullTxObjects === void 0) {\n        fullTxObjects = true;\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var endpoint, response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              endpoint = this.isBlockNumberHash(blockHashOrBlockNumber) ? 'eth_getBlockByHash' // Reference: https://eth.wiki/json-rpc/API#eth_getBlockByHash\n              : 'eth_getBlockByNumber' // Reference: https://eth.wiki/json-rpc/API#eth_getBlockByNumber\n              ;\n              return [4\n              /*yield*/\n              , this.rpcCaller.call(endpoint, [(0, formatter_1.inputBlockNumberFormatter)(blockHashOrBlockNumber), fullTxObjects])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.outputBlockFormatter)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.getBlockHeader = function (blockHashOrBlockNumber) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var endpoint, response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              endpoint = this.isBlockNumberHash(blockHashOrBlockNumber) ? 'eth_getHeaderByHash' : 'eth_getHeaderByNumber';\n              return [4\n              /*yield*/\n              , this.rpcCaller.call(endpoint, [(0, formatter_1.inputBlockNumberFormatter)(blockHashOrBlockNumber)])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.outputBlockHeaderFormatter)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.getBalance = function (address, defaultBlock) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_getBalance', [(0, formatter_1.inputAddressFormatter)(address), (0, formatter_1.inputDefaultBlockNumberFormatter)(defaultBlock)])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.outputBigNumberFormatter)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.getTransaction = function (transactionHash) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_getTransactionByHash', [(0, address_1.ensureLeading0x)(transactionHash)])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.outputCeloTxFormatter)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.getTransactionReceipt = function (txhash) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_getTransactionReceipt', [(0, address_1.ensureLeading0x)(txhash)])];\n\n            case 1:\n              response = _a.sent();\n\n              if (response.result === null) {\n                return [2\n                /*return*/\n                , null];\n              }\n\n              return [2\n              /*return*/\n              , (0, formatter_1.outputCeloTxReceiptFormatter)(response.result)];\n          }\n        });\n      });\n    };\n\n    web3.eth.handleRevert = handleRevert;\n    this.config = {\n      gasInflationFactor: 1.3,\n      // gasPrice:0 means the node will compute gasPrice on its own\n      gasPrice: '0'\n    };\n    var existingProvider = web3.currentProvider;\n    this.setProvider(existingProvider); // TODO: Add this line with the wallets separation completed\n    // this.wallet = _wallet ?? new LocalWallet()\n\n    this.config.from = (_a = web3.eth.defaultAccount) !== null && _a !== void 0 ? _a : undefined;\n    this.paramsPopulator = new tx_params_normalizer_1.TxParamsNormalizer(this);\n  }\n\n  Connection.prototype.setProvider = function (provider) {\n    if (!provider) {\n      throw new Error('Must have a valid Provider');\n    }\n\n    try {\n      if (!(provider instanceof celo_provider_1.CeloProvider)) {\n        this.rpcCaller = new rpc_caller_1.DefaultRpcCaller(provider);\n        provider = new celo_provider_1.CeloProvider(provider, this);\n      }\n\n      this.web3.setProvider(provider);\n      return true;\n    } catch (_a) {\n      return false;\n    }\n  };\n\n  Object.defineProperty(Connection.prototype, \"defaultAccount\", {\n    /**\n     * Default account for generated transactions (eg. tx.from)\n     */\n    get: function () {\n      return this.config.from;\n    },\n\n    /**\n     * Set default account for generated transactions (eg. tx.from )\n     */\n    set: function (address) {\n      this.config.from = address;\n      this.web3.eth.defaultAccount = address ? address : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Connection.prototype, \"defaultGasInflationFactor\", {\n    get: function () {\n      return this.config.gasInflationFactor;\n    },\n    set: function (factor) {\n      this.config.gasInflationFactor = factor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Connection.prototype, \"defaultGasPrice\", {\n    get: function () {\n      return parseInt(this.config.gasPrice, 10);\n    },\n    set: function (price) {\n      this.config.gasPrice = price.toString(10);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Connection.prototype, \"defaultFeeCurrency\", {\n    get: function () {\n      return this.config.feeCurrency;\n    },\n\n    /**\n     * Set the ERC20 address for the token to use to pay for transaction fees.\n     * The ERC20 must be whitelisted for gas.\n     *\n     * Set to `null` to use CELO\n     *\n     * @param address ERC20 address\n     */\n    set: function (address) {\n      this.config.feeCurrency = address;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Connection.prototype.isLocalAccount = function (address) {\n    return this.wallet != null && this.wallet.hasAccount(address);\n  };\n\n  Connection.prototype.addAccount = function (privateKey) {\n    if (this.wallet) {\n      if ((0, provider_utils_1.hasProperty)(this.wallet, 'addAccount')) {\n        this.wallet.addAccount(privateKey);\n      } else {\n        throw new Error(\"The wallet used, can't add accounts\");\n      }\n    } else {\n      throw new Error('No wallet set');\n    }\n  };\n\n  Connection.prototype.removeAccount = function (address) {\n    if (this.wallet) {\n      if ((0, provider_utils_1.hasProperty)(this.wallet, 'removeAccount')) {\n        this.wallet.removeAccount(address);\n      } else {\n        throw new Error(\"The wallet used, can't remove accounts\");\n      }\n    } else {\n      throw new Error('No wallet set');\n    }\n  };\n\n  Connection.prototype.getNodeAccounts = function () {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var nodeAccountsResp;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.rpcCaller.call('eth_accounts', [])];\n\n          case 1:\n            nodeAccountsResp = _b.sent();\n            return [2\n            /*return*/\n            , this.toChecksumAddresses((_a = nodeAccountsResp.result) !== null && _a !== void 0 ? _a : [])];\n        }\n      });\n    });\n  };\n\n  Connection.prototype.getLocalAccounts = function () {\n    return this.wallet ? this.toChecksumAddresses(this.wallet.getAccounts()) : [];\n  };\n\n  Connection.prototype.getAccounts = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getNodeAccounts()];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent().concat(this.getLocalAccounts())];\n        }\n      });\n    });\n  };\n\n  Connection.prototype.toChecksumAddresses = function (addresses) {\n    return addresses.map(function (value) {\n      return (0, address_1.toChecksumAddress)(value);\n    });\n  };\n\n  Connection.prototype.isListening = function () {\n    return this.web3.eth.net.isListening();\n  };\n\n  Connection.prototype.isSyncing = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this.web3.eth.isSyncing().then(function (response) {\n        // isSyncing returns a syncProgress object when it's still syncing\n        if (typeof response === 'boolean') {\n          resolve(response);\n        } else {\n          resolve(true);\n        }\n      }).catch(reject);\n    });\n  }; // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n\n\n  Connection.prototype.fillGasPrice = function (tx) {\n    if (tx.feeCurrency && tx.gasPrice === '0' && this.currencyGasPrice.has(tx.feeCurrency)) {\n      return __assign(__assign({}, tx), {\n        gasPrice: this.currencyGasPrice.get(tx.feeCurrency)\n      });\n    }\n\n    return tx;\n  }; // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n\n\n  Connection.prototype.setGasPriceForCurrency = function (address, gasPrice) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this.currencyGasPrice.set(address, gasPrice);\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  Connection.prototype.getAbiCoder = function () {\n    return this.web3.eth.abi;\n  };\n\n  Connection.prototype.fillTxDefaults = function (tx) {\n    var defaultTx = {\n      from: this.config.from,\n      feeCurrency: this.config.feeCurrency,\n      gasPrice: this.config.gasPrice\n    };\n    return __assign(__assign({}, defaultTx), tx);\n  };\n\n  Connection.prototype.stop = function () {\n    (0, celo_provider_1.assertIsCeloProvider)(this.web3.currentProvider);\n    this.web3.currentProvider.stop();\n  };\n\n  return Connection;\n}();\n\nexports.Connection = Connection;","map":{"version":3,"sources":["../src/connection.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nvar address_1 = require(\"@celo/utils/lib/address\");\nvar sign_typed_data_utils_1 = require(\"@celo/utils/lib/sign-typed-data-utils\");\nvar signatureUtils_1 = require(\"@celo/utils/lib/signatureUtils\");\nvar debug_1 = __importDefault(require(\"debug\"));\nvar celo_provider_1 = require(\"./celo-provider\");\nvar abi_utils_1 = require(\"./utils/abi-utils\");\nvar formatter_1 = require(\"./utils/formatter\");\nvar provider_utils_1 = require(\"./utils/provider-utils\");\nvar rpc_caller_1 = require(\"./utils/rpc-caller\");\nvar tx_params_normalizer_1 = require(\"./utils/tx-params-normalizer\");\nvar tx_result_1 = require(\"./utils/tx-result\");\nvar debugGasEstimation = (0, debug_1.default)('connection:gas-estimation');\nvar Connection = /** @class */ (function () {\n    function Connection(web3, wallet, handleRevert) {\n        var _this = this;\n        if (handleRevert === void 0) { handleRevert = true; }\n        var _a;\n        this.web3 = web3;\n        this.wallet = wallet;\n        // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n        this.currencyGasPrice = new Map();\n        /**\n         * Send a transaction to celo-blockchain.\n         *\n         * Similar to `web3.eth.sendTransaction()` but with following differences:\n         *  - applies kit tx's defaults\n         *  - estimatesGas before sending\n         *  - returns a `TransactionResult` instead of `PromiEvent`\n         */\n        this.sendTransaction = function (tx) { return __awaiter(_this, void 0, void 0, function () {\n            var gas;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        tx = this.fillTxDefaults(tx);\n                        tx = this.fillGasPrice(tx);\n                        gas = tx.gas;\n                        if (!(gas == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.estimateGasWithInflationFactor(tx)];\n                    case 1:\n                        gas = _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, (0, tx_result_1.toTxResult)(this.web3.eth.sendTransaction(__assign(__assign({}, tx), { gas: gas })))];\n                }\n            });\n        }); };\n        this.sendTransactionObject = function (txObj, tx) { return __awaiter(_this, void 0, void 0, function () {\n            var gas, gasEstimator, getCallTx_1, caller;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        tx = this.fillTxDefaults(tx);\n                        tx = this.fillGasPrice(tx);\n                        gas = tx.gas;\n                        if (!(gas == null)) return [3 /*break*/, 2];\n                        gasEstimator = function (_tx) { return txObj.estimateGas(__assign({}, _tx)); };\n                        getCallTx_1 = function (_tx) {\n                            // @ts-ignore missing _parent property from TransactionObject type.\n                            return __assign(__assign({}, _tx), { data: txObj.encodeABI(), to: txObj._parent._address });\n                        };\n                        caller = function (_tx) { return _this.web3.eth.call(getCallTx_1(_tx)); };\n                        return [4 /*yield*/, this.estimateGasWithInflationFactor(tx, gasEstimator, caller)];\n                    case 1:\n                        gas = _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, (0, tx_result_1.toTxResult)(txObj.send(__assign(__assign({}, tx), { gas: gas })))];\n                }\n            });\n        }); };\n        this.signTypedData = function (signer, typedData) { return __awaiter(_this, void 0, void 0, function () {\n            var signature, messageHash;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, new Promise(function (resolve, reject) {\n                            ;\n                            _this.web3.currentProvider.send({\n                                id: (0, rpc_caller_1.getRandomId)(),\n                                jsonrpc: '2.0',\n                                method: 'eth_signTypedData',\n                                params: [(0, formatter_1.inputAddressFormatter)(signer), typedData],\n                            }, function (error, resp) {\n                                if (error) {\n                                    reject(error);\n                                }\n                                else if (resp) {\n                                    resolve(resp.result);\n                                }\n                                else {\n                                    reject(new Error('empty-response'));\n                                }\n                            });\n                        })];\n                    case 1:\n                        signature = _a.sent();\n                        messageHash = (0, address_1.ensureLeading0x)((0, sign_typed_data_utils_1.generateTypedDataHash)(typedData).toString('hex'));\n                        return [2 /*return*/, (0, signatureUtils_1.parseSignatureWithoutPrefix)(messageHash, signature, signer)];\n                }\n            });\n        }); };\n        this.sign = function (dataToSign, address) { return __awaiter(_this, void 0, void 0, function () {\n            var signature;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, new Promise(function (resolve, reject) {\n                            ;\n                            _this.web3.currentProvider.send({\n                                id: (0, rpc_caller_1.getRandomId)(),\n                                jsonrpc: '2.0',\n                                method: 'eth_sign',\n                                params: [(0, formatter_1.inputAddressFormatter)(address.toString()), (0, formatter_1.inputSignFormatter)(dataToSign)],\n                            }, function (error, resp) {\n                                if (error) {\n                                    reject(error);\n                                }\n                                else if (resp) {\n                                    resolve(resp.result);\n                                }\n                                else {\n                                    reject(new Error('empty-response'));\n                                }\n                            });\n                        })];\n                    case 1:\n                        signature = _a.sent();\n                        return [2 /*return*/, signature];\n                }\n            });\n        }); };\n        this.sendSignedTransaction = function (signedTransactionData) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, (0, tx_result_1.toTxResult)(this.web3.eth.sendSignedTransaction(signedTransactionData))];\n            });\n        }); };\n        this.estimateGas = function (tx, gasEstimator, caller) {\n            if (gasEstimator === void 0) { gasEstimator = _this.web3.eth.estimateGas; }\n            if (caller === void 0) { caller = _this.web3.eth.call; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var gas, e_1, called, revertReason;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            _a.trys.push([0, 2, , 4]);\n                            return [4 /*yield*/, gasEstimator(__assign({}, tx))];\n                        case 1:\n                            gas = _a.sent();\n                            debugGasEstimation('estimatedGas: %s', gas.toString());\n                            return [2 /*return*/, gas];\n                        case 2:\n                            e_1 = _a.sent();\n                            return [4 /*yield*/, caller({ data: tx.data, to: tx.to, from: tx.from })];\n                        case 3:\n                            called = _a.sent();\n                            revertReason = 'Could not decode transaction failure reason';\n                            if (called.startsWith('0x08c379a')) {\n                                revertReason = (0, abi_utils_1.decodeStringParameter)(this.getAbiCoder(), called.substring(10));\n                            }\n                            debugGasEstimation('Recover transaction failure reason', {\n                                called: called,\n                                data: tx.data,\n                                to: tx.to,\n                                from: tx.from,\n                                error: e_1,\n                                revertReason: revertReason,\n                            });\n                            return [2 /*return*/, Promise.reject(\"Gas estimation failed: \" + revertReason + \" or \" + e_1)];\n                        case 4: return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        this.estimateGasWithInflationFactor = function (tx, gasEstimator, caller) { return __awaiter(_this, void 0, void 0, function () {\n            var gas, _a, _b, e_2;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _c.trys.push([0, 2, , 3]);\n                        _b = (_a = Math).round;\n                        return [4 /*yield*/, this.estimateGas(tx, gasEstimator, caller)];\n                    case 1:\n                        gas = _b.apply(_a, [(_c.sent()) * this.config.gasInflationFactor]);\n                        debugGasEstimation('estimatedGasWithInflationFactor: %s', gas);\n                        return [2 /*return*/, gas];\n                    case 2:\n                        e_2 = _c.sent();\n                        throw new Error(e_2);\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.chainId = function () { return __awaiter(_this, void 0, void 0, function () {\n            var response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.rpcCaller.call('net_version', [])];\n                    case 1:\n                        response = _a.sent();\n                        return [2 /*return*/, parseInt(response.result.toString(), 10)];\n                }\n            });\n        }); };\n        this.getTransactionCount = function (address) { return __awaiter(_this, void 0, void 0, function () {\n            var response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.rpcCaller.call('eth_getTransactionCount', [address, 'pending'])];\n                    case 1:\n                        response = _a.sent();\n                        return [2 /*return*/, (0, formatter_1.hexToNumber)(response.result)];\n                }\n            });\n        }); };\n        this.nonce = function (address) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.getTransactionCount(address)];\n            });\n        }); };\n        this.coinbase = function () { return __awaiter(_this, void 0, void 0, function () {\n            var response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.rpcCaller.call('eth_coinbase', [])];\n                    case 1:\n                        response = _a.sent();\n                        return [2 /*return*/, response.result.toString()];\n                }\n            });\n        }); };\n        this.gasPrice = function (feeCurrency) { return __awaiter(_this, void 0, void 0, function () {\n            var parameter, response, gasPriceInHex;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        parameter = feeCurrency ? [feeCurrency] : [];\n                        return [4 /*yield*/, this.rpcCaller.call('eth_gasPrice', parameter)];\n                    case 1:\n                        response = _a.sent();\n                        gasPriceInHex = response.result.toString();\n                        return [2 /*return*/, gasPriceInHex];\n                }\n            });\n        }); };\n        this.getBlockNumber = function () { return __awaiter(_this, void 0, void 0, function () {\n            var response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.rpcCaller.call('eth_blockNumber', [])];\n                    case 1:\n                        response = _a.sent();\n                        return [2 /*return*/, (0, formatter_1.hexToNumber)(response.result)];\n                }\n            });\n        }); };\n        this.isBlockNumberHash = function (blockNumber) {\n            return blockNumber instanceof String && blockNumber.indexOf('0x') === 0;\n        };\n        this.getBlock = function (blockHashOrBlockNumber, fullTxObjects) {\n            if (fullTxObjects === void 0) { fullTxObjects = true; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var endpoint, response;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            endpoint = this.isBlockNumberHash(blockHashOrBlockNumber)\n                                ? 'eth_getBlockByHash' // Reference: https://eth.wiki/json-rpc/API#eth_getBlockByHash\n                                : 'eth_getBlockByNumber' // Reference: https://eth.wiki/json-rpc/API#eth_getBlockByNumber\n                            ;\n                            return [4 /*yield*/, this.rpcCaller.call(endpoint, [\n                                    (0, formatter_1.inputBlockNumberFormatter)(blockHashOrBlockNumber),\n                                    fullTxObjects,\n                                ])];\n                        case 1:\n                            response = _a.sent();\n                            return [2 /*return*/, (0, formatter_1.outputBlockFormatter)(response.result)];\n                    }\n                });\n            });\n        };\n        this.getBlockHeader = function (blockHashOrBlockNumber) { return __awaiter(_this, void 0, void 0, function () {\n            var endpoint, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        endpoint = this.isBlockNumberHash(blockHashOrBlockNumber)\n                            ? 'eth_getHeaderByHash'\n                            : 'eth_getHeaderByNumber';\n                        return [4 /*yield*/, this.rpcCaller.call(endpoint, [\n                                (0, formatter_1.inputBlockNumberFormatter)(blockHashOrBlockNumber),\n                            ])];\n                    case 1:\n                        response = _a.sent();\n                        return [2 /*return*/, (0, formatter_1.outputBlockHeaderFormatter)(response.result)];\n                }\n            });\n        }); };\n        this.getBalance = function (address, defaultBlock) { return __awaiter(_this, void 0, void 0, function () {\n            var response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.rpcCaller.call('eth_getBalance', [\n                            (0, formatter_1.inputAddressFormatter)(address),\n                            (0, formatter_1.inputDefaultBlockNumberFormatter)(defaultBlock),\n                        ])];\n                    case 1:\n                        response = _a.sent();\n                        return [2 /*return*/, (0, formatter_1.outputBigNumberFormatter)(response.result)];\n                }\n            });\n        }); };\n        this.getTransaction = function (transactionHash) { return __awaiter(_this, void 0, void 0, function () {\n            var response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.rpcCaller.call('eth_getTransactionByHash', [\n                            (0, address_1.ensureLeading0x)(transactionHash),\n                        ])];\n                    case 1:\n                        response = _a.sent();\n                        return [2 /*return*/, (0, formatter_1.outputCeloTxFormatter)(response.result)];\n                }\n            });\n        }); };\n        this.getTransactionReceipt = function (txhash) { return __awaiter(_this, void 0, void 0, function () {\n            var response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.rpcCaller.call('eth_getTransactionReceipt', [\n                            (0, address_1.ensureLeading0x)(txhash),\n                        ])];\n                    case 1:\n                        response = _a.sent();\n                        if (response.result === null) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, (0, formatter_1.outputCeloTxReceiptFormatter)(response.result)];\n                }\n            });\n        }); };\n        web3.eth.handleRevert = handleRevert;\n        this.config = {\n            gasInflationFactor: 1.3,\n            // gasPrice:0 means the node will compute gasPrice on its own\n            gasPrice: '0',\n        };\n        var existingProvider = web3.currentProvider;\n        this.setProvider(existingProvider);\n        // TODO: Add this line with the wallets separation completed\n        // this.wallet = _wallet ?? new LocalWallet()\n        this.config.from = (_a = web3.eth.defaultAccount) !== null && _a !== void 0 ? _a : undefined;\n        this.paramsPopulator = new tx_params_normalizer_1.TxParamsNormalizer(this);\n    }\n    Connection.prototype.setProvider = function (provider) {\n        if (!provider) {\n            throw new Error('Must have a valid Provider');\n        }\n        try {\n            if (!(provider instanceof celo_provider_1.CeloProvider)) {\n                this.rpcCaller = new rpc_caller_1.DefaultRpcCaller(provider);\n                provider = new celo_provider_1.CeloProvider(provider, this);\n            }\n            this.web3.setProvider(provider);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    };\n    Object.defineProperty(Connection.prototype, \"defaultAccount\", {\n        /**\n         * Default account for generated transactions (eg. tx.from)\n         */\n        get: function () {\n            return this.config.from;\n        },\n        /**\n         * Set default account for generated transactions (eg. tx.from )\n         */\n        set: function (address) {\n            this.config.from = address;\n            this.web3.eth.defaultAccount = address ? address : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"defaultGasInflationFactor\", {\n        get: function () {\n            return this.config.gasInflationFactor;\n        },\n        set: function (factor) {\n            this.config.gasInflationFactor = factor;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"defaultGasPrice\", {\n        get: function () {\n            return parseInt(this.config.gasPrice, 10);\n        },\n        set: function (price) {\n            this.config.gasPrice = price.toString(10);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"defaultFeeCurrency\", {\n        get: function () {\n            return this.config.feeCurrency;\n        },\n        /**\n         * Set the ERC20 address for the token to use to pay for transaction fees.\n         * The ERC20 must be whitelisted for gas.\n         *\n         * Set to `null` to use CELO\n         *\n         * @param address ERC20 address\n         */\n        set: function (address) {\n            this.config.feeCurrency = address;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Connection.prototype.isLocalAccount = function (address) {\n        return this.wallet != null && this.wallet.hasAccount(address);\n    };\n    Connection.prototype.addAccount = function (privateKey) {\n        if (this.wallet) {\n            if ((0, provider_utils_1.hasProperty)(this.wallet, 'addAccount')) {\n                this.wallet.addAccount(privateKey);\n            }\n            else {\n                throw new Error(\"The wallet used, can't add accounts\");\n            }\n        }\n        else {\n            throw new Error('No wallet set');\n        }\n    };\n    Connection.prototype.removeAccount = function (address) {\n        if (this.wallet) {\n            if ((0, provider_utils_1.hasProperty)(this.wallet, 'removeAccount')) {\n                this.wallet.removeAccount(address);\n            }\n            else {\n                throw new Error(\"The wallet used, can't remove accounts\");\n            }\n        }\n        else {\n            throw new Error('No wallet set');\n        }\n    };\n    Connection.prototype.getNodeAccounts = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var nodeAccountsResp;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.rpcCaller.call('eth_accounts', [])];\n                    case 1:\n                        nodeAccountsResp = _b.sent();\n                        return [2 /*return*/, this.toChecksumAddresses((_a = nodeAccountsResp.result) !== null && _a !== void 0 ? _a : [])];\n                }\n            });\n        });\n    };\n    Connection.prototype.getLocalAccounts = function () {\n        return this.wallet ? this.toChecksumAddresses(this.wallet.getAccounts()) : [];\n    };\n    Connection.prototype.getAccounts = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNodeAccounts()];\n                    case 1: return [2 /*return*/, (_a.sent()).concat(this.getLocalAccounts())];\n                }\n            });\n        });\n    };\n    Connection.prototype.toChecksumAddresses = function (addresses) {\n        return addresses.map(function (value) { return (0, address_1.toChecksumAddress)(value); });\n    };\n    Connection.prototype.isListening = function () {\n        return this.web3.eth.net.isListening();\n    };\n    Connection.prototype.isSyncing = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.web3.eth\n                .isSyncing()\n                .then(function (response) {\n                // isSyncing returns a syncProgress object when it's still syncing\n                if (typeof response === 'boolean') {\n                    resolve(response);\n                }\n                else {\n                    resolve(true);\n                }\n            })\n                .catch(reject);\n        });\n    };\n    // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n    Connection.prototype.fillGasPrice = function (tx) {\n        if (tx.feeCurrency && tx.gasPrice === '0' && this.currencyGasPrice.has(tx.feeCurrency)) {\n            return __assign(__assign({}, tx), { gasPrice: this.currencyGasPrice.get(tx.feeCurrency) });\n        }\n        return tx;\n    };\n    // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n    Connection.prototype.setGasPriceForCurrency = function (address, gasPrice) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.currencyGasPrice.set(address, gasPrice);\n                return [2 /*return*/];\n            });\n        });\n    };\n    Connection.prototype.getAbiCoder = function () {\n        return this.web3.eth.abi;\n    };\n    Connection.prototype.fillTxDefaults = function (tx) {\n        var defaultTx = {\n            from: this.config.from,\n            feeCurrency: this.config.feeCurrency,\n            gasPrice: this.config.gasPrice,\n        };\n        return __assign(__assign({}, defaultTx), tx);\n    };\n    Connection.prototype.stop = function () {\n        (0, celo_provider_1.assertIsCeloProvider)(this.web3.currentProvider);\n        this.web3.currentProvider.stop();\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n//# sourceMappingURL=connection.js.map"]},"metadata":{},"sourceType":"script"}