{"ast":null,"code":"\"use strict\";\n/**\n * @file Represents a value of one of two possible types (a disjoint union).\n *\n * An instance of `Either` is either an instance of `Left` or `Right`.\n *\n * A common use of `Either` is as an alternative to `Option` for dealing with possible missing values. In this usage,\n * `None` is replaced with a `Left` which can contain useful information. `Right` takes the place of `Some`. Convention\n * dictates that `Left` is used for failure and `Right` is used for success.\n *\n * For example, you could use `Either<string, number>` to detect whether a received input is a `string` or a `number`.\n *\n * ```ts\n * const parse = (errorMessage: string) => (input: string): Either<string, number> => {\n *   const n = parseInt(input, 10)\n *   return isNaN(n) ? left(errorMessage) : right(n)\n * }\n * ```\n *\n * `Either` is right-biased, which means that `Right` is assumed to be the default case to operate on. If it is `Left`,\n * operations like `map`, `chain`, ... return the `Left` value unchanged:\n *\n * ```ts\n * import { either } from 'fp-ts/lib/Either'\n *\n * either.map(right(12), double) // right(24)\n * either.map(left(23), double)  // left(23)\n * ```\n */\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ChainRec_1 = require(\"./ChainRec\");\n\nvar pipeable_1 = require(\"./pipeable\");\n/**\n * @since 2.0.0\n */\n\n\nexports.URI = 'Either';\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure\n *\n * @since 2.0.0\n */\n\nfunction left(e) {\n  return {\n    _tag: 'Left',\n    left: e\n  };\n}\n\nexports.left = left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure\n *\n * @since 2.0.0\n */\n\nfunction right(a) {\n  return {\n    _tag: 'Right',\n    right: a\n  };\n}\n\nexports.right = right;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`\n *\n * @since 2.0.0\n */\n\nfunction fromNullable(e) {\n  return function (a) {\n    return a == null ? left(e) : right(a);\n  };\n}\n\nexports.fromNullable = fromNullable;\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\n\nfunction toError(e) {\n  return e instanceof Error ? e : new Error(String(e));\n}\n\nexports.toError = toError;\n/**\n * Constructs a new `Either` from a function that might throw\n *\n * @example\n * import { Either, left, right, tryCatch } from 'fp-ts/lib/Either'\n *\n * const unsafeHead = <A>(as: Array<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: Array<A>): Either<Error, A> => {\n *   return tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n * }\n *\n * assert.deepStrictEqual(head([]), left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), right(1))\n *\n * @since 2.0.0\n */\n\nfunction tryCatch(f, onError) {\n  try {\n    return right(f());\n  } catch (e) {\n    return left(onError(e));\n  }\n}\n\nexports.tryCatch = tryCatch;\n/**\n * @since 2.0.0\n */\n\nfunction fold(onLeft, onRight) {\n  return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : onRight(ma.right);\n  };\n}\n\nexports.fold = fold;\n/**\n * @since 2.0.0\n */\n\nfunction getShow(SE, SA) {\n  return {\n    show: function (ma) {\n      return isLeft(ma) ? \"left(\" + SE.show(ma.left) + \")\" : \"right(\" + SA.show(ma.right) + \")\";\n    }\n  };\n}\n\nexports.getShow = getShow;\n/**\n * @since 2.0.0\n */\n\nfunction getEq(EL, EA) {\n  return {\n    equals: function (x, y) {\n      return x === y || (isLeft(x) ? isLeft(y) && EL.equals(x.left, y.left) : isRight(y) && EA.equals(x.right, y.right));\n    }\n  };\n}\n\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * appended using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/lib/Either'\n * import { semigroupSum } from 'fp-ts/lib/Semigroup'\n *\n * const S = getSemigroup<string, number>(semigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n *\n * @since 2.0.0\n */\n\nfunction getSemigroup(S) {\n  return {\n    concat: function (x, y) {\n      return isLeft(y) ? x : isLeft(x) ? y : right(S.concat(x.right, y.right));\n    }\n  };\n}\n\nexports.getSemigroup = getSemigroup;\n/**\n * `Apply` semigroup\n *\n * @example\n * import { getApplySemigroup, left, right } from 'fp-ts/lib/Either'\n * import { semigroupSum } from 'fp-ts/lib/Semigroup'\n *\n * const S = getApplySemigroup<string, number>(semigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), left('a'))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), left('b'))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n *\n * @since 2.0.0\n */\n\nfunction getApplySemigroup(S) {\n  return {\n    concat: function (x, y) {\n      return isLeft(x) ? x : isLeft(y) ? y : right(S.concat(x.right, y.right));\n    }\n  };\n}\n\nexports.getApplySemigroup = getApplySemigroup;\n/**\n * @since 2.0.0\n */\n\nfunction getApplyMonoid(M) {\n  return __assign(__assign({}, getApplySemigroup(M)), {\n    empty: right(M.empty)\n  });\n}\n\nexports.getApplyMonoid = getApplyMonoid;\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise\n *\n * @since 2.0.0\n */\n\nfunction isLeft(ma) {\n  switch (ma._tag) {\n    case 'Left':\n      return true;\n\n    case 'Right':\n      return false;\n  }\n}\n\nexports.isLeft = isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise\n *\n * @since 2.0.0\n */\n\nfunction isRight(ma) {\n  return isLeft(ma) ? false : true;\n}\n\nexports.isRight = isRight;\n/**\n * @since 2.0.0\n */\n\nfunction swap(ma) {\n  return isLeft(ma) ? right(ma.left) : left(ma.right);\n}\n\nexports.swap = swap;\n/**\n * @since 2.0.0\n */\n\nfunction orElse(onLeft) {\n  return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : ma;\n  };\n}\n\nexports.orElse = orElse;\n/**\n * @since 2.0.0\n */\n\nfunction getOrElse(onLeft) {\n  return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : ma.right;\n  };\n}\n\nexports.getOrElse = getOrElse;\n/**\n * @since 2.0.0\n */\n\nfunction elem(E) {\n  return function (a, ma) {\n    return isLeft(ma) ? false : E.equals(a, ma.right);\n  };\n}\n\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/lib/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\n\nfunction exists(predicate) {\n  return function (ma) {\n    return isLeft(ma) ? false : predicate(ma.right);\n  };\n}\n\nexports.exists = exists;\n/**\n * Converts a JavaScript Object Notation (JSON) string into an object.\n *\n * @example\n * import { parseJSON, toError, right, left } from 'fp-ts/lib/Either'\n *\n * assert.deepStrictEqual(parseJSON('{\"a\":1}', toError), right({ a: 1 }))\n * assert.deepStrictEqual(parseJSON('{\"a\":}', toError), left(new SyntaxError('Unexpected token } in JSON at position 5')))\n *\n * @since 2.0.0\n */\n\nfunction parseJSON(s, onError) {\n  return tryCatch(function () {\n    return JSON.parse(s);\n  }, onError);\n}\n\nexports.parseJSON = parseJSON;\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n *\n * @example\n * import { stringifyJSON, toError, right, left } from 'fp-ts/lib/Either'\n *\n * assert.deepStrictEqual(stringifyJSON({ a: 1 }, toError), right('{\"a\":1}'))\n * const circular: any = { ref: null }\n * circular.ref = circular\n * assert.deepStrictEqual(stringifyJSON(circular, toError), left(new TypeError('Converting circular structure to JSON')))\n *\n * @since 2.0.0\n */\n\nfunction stringifyJSON(u, onError) {\n  return tryCatch(function () {\n    return JSON.stringify(u);\n  }, onError);\n}\n\nexports.stringifyJSON = stringifyJSON;\nvar phantom = undefined;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @since 2.0.0\n */\n\nfunction getWitherable(M) {\n  var empty = left(M.empty);\n\n  var compact = function (ma) {\n    return isLeft(ma) ? ma : ma.right._tag === 'None' ? left(M.empty) : right(ma.right.value);\n  };\n\n  var separate = function (ma) {\n    return isLeft(ma) ? {\n      left: ma,\n      right: ma\n    } : isLeft(ma.right) ? {\n      left: right(ma.right.left),\n      right: empty\n    } : {\n      left: empty,\n      right: right(ma.right.right)\n    };\n  };\n\n  var partitionMap = function (ma, f) {\n    if (isLeft(ma)) {\n      return {\n        left: ma,\n        right: ma\n      };\n    }\n\n    var e = f(ma.right);\n    return isLeft(e) ? {\n      left: right(e.left),\n      right: empty\n    } : {\n      left: empty,\n      right: right(e.right)\n    };\n  };\n\n  var partition = function (ma, p) {\n    return isLeft(ma) ? {\n      left: ma,\n      right: ma\n    } : p(ma.right) ? {\n      left: empty,\n      right: right(ma.right)\n    } : {\n      left: right(ma.right),\n      right: empty\n    };\n  };\n\n  var filterMap = function (ma, f) {\n    if (isLeft(ma)) {\n      return ma;\n    }\n\n    var ob = f(ma.right);\n    return ob._tag === 'None' ? left(M.empty) : right(ob.value);\n  };\n\n  var filter = function (ma, predicate) {\n    return isLeft(ma) ? ma : predicate(ma.right) ? ma : left(M.empty);\n  };\n\n  var wither = function (F) {\n    var traverseF = exports.either.traverse(F);\n    return function (ma, f) {\n      return F.map(traverseF(ma, f), compact);\n    };\n  };\n\n  var wilt = function (F) {\n    var traverseF = exports.either.traverse(F);\n    return function (ma, f) {\n      return F.map(traverseF(ma, f), separate);\n    };\n  };\n\n  return {\n    URI: exports.URI,\n    _E: phantom,\n    map: exports.either.map,\n    compact: compact,\n    separate: separate,\n    filter: filter,\n    filterMap: filterMap,\n    partition: partition,\n    partitionMap: partitionMap,\n    traverse: exports.either.traverse,\n    sequence: exports.either.sequence,\n    reduce: exports.either.reduce,\n    foldMap: exports.either.foldMap,\n    reduceRight: exports.either.reduceRight,\n    wither: wither,\n    wilt: wilt\n  };\n}\n\nexports.getWitherable = getWitherable;\n/**\n * @since 2.0.0\n */\n\nfunction getValidation(S) {\n  return {\n    URI: exports.URI,\n    _E: phantom,\n    map: exports.either.map,\n    of: exports.either.of,\n    ap: function (mab, ma) {\n      return isLeft(mab) ? isLeft(ma) ? left(S.concat(mab.left, ma.left)) : mab : isLeft(ma) ? ma : right(mab.right(ma.right));\n    },\n    chain: exports.either.chain,\n    alt: function (fx, f) {\n      if (isRight(fx)) {\n        return fx;\n      }\n\n      var fy = f();\n      return isLeft(fy) ? left(S.concat(fx.left, fy.left)) : fy;\n    }\n  };\n}\n\nexports.getValidation = getValidation;\n/**\n * @since 2.0.0\n */\n\nfunction getValidationSemigroup(SE, SA) {\n  return {\n    concat: function (fx, fy) {\n      return isLeft(fx) ? isLeft(fy) ? left(SE.concat(fx.left, fy.left)) : fx : isLeft(fy) ? fy : right(SA.concat(fx.right, fy.right));\n    }\n  };\n}\n\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * @since 2.0.0\n */\n\nfunction getValidationMonoid(SE, SA) {\n  return {\n    concat: getValidationSemigroup(SE, SA).concat,\n    empty: right(SA.empty)\n  };\n}\n\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * @since 2.0.0\n */\n\nexports.either = {\n  URI: exports.URI,\n  map: function (ma, f) {\n    return isLeft(ma) ? ma : right(f(ma.right));\n  },\n  of: right,\n  ap: function (mab, ma) {\n    return isLeft(mab) ? mab : isLeft(ma) ? ma : right(mab.right(ma.right));\n  },\n  chain: function (ma, f) {\n    return isLeft(ma) ? ma : f(ma.right);\n  },\n  reduce: function (fa, b, f) {\n    return isLeft(fa) ? b : f(b, fa.right);\n  },\n  foldMap: function (M) {\n    return function (fa, f) {\n      return isLeft(fa) ? M.empty : f(fa.right);\n    };\n  },\n  reduceRight: function (fa, b, f) {\n    return isLeft(fa) ? b : f(fa.right, b);\n  },\n  traverse: function (F) {\n    return function (ma, f) {\n      return isLeft(ma) ? F.of(left(ma.left)) : F.map(f(ma.right), right);\n    };\n  },\n  sequence: function (F) {\n    return function (ma) {\n      return isLeft(ma) ? F.of(left(ma.left)) : F.map(ma.right, right);\n    };\n  },\n  bimap: function (fea, f, g) {\n    return isLeft(fea) ? left(f(fea.left)) : right(g(fea.right));\n  },\n  mapLeft: function (fea, f) {\n    return isLeft(fea) ? left(f(fea.left)) : fea;\n  },\n  alt: function (fx, fy) {\n    return isLeft(fx) ? fy() : fx;\n  },\n  extend: function (wa, f) {\n    return isLeft(wa) ? wa : right(f(wa));\n  },\n  chainRec: function (a, f) {\n    return ChainRec_1.tailRec(f(a), function (e) {\n      return isLeft(e) ? right(left(e.left)) : isLeft(e.right) ? left(f(e.right.left)) : right(right(e.right.right));\n    });\n  },\n  throwError: left\n};\n\nvar _a = pipeable_1.pipeable(exports.either),\n    alt = _a.alt,\n    ap = _a.ap,\n    apFirst = _a.apFirst,\n    apSecond = _a.apSecond,\n    bimap = _a.bimap,\n    chain = _a.chain,\n    chainFirst = _a.chainFirst,\n    duplicate = _a.duplicate,\n    extend = _a.extend,\n    flatten = _a.flatten,\n    foldMap = _a.foldMap,\n    map = _a.map,\n    mapLeft = _a.mapLeft,\n    reduce = _a.reduce,\n    reduceRight = _a.reduceRight,\n    fromOption = _a.fromOption,\n    fromPredicate = _a.fromPredicate,\n    filterOrElse = _a.filterOrElse;\n\nexports.alt = alt;\nexports.ap = ap;\nexports.apFirst = apFirst;\nexports.apSecond = apSecond;\nexports.bimap = bimap;\nexports.chain = chain;\nexports.chainFirst = chainFirst;\nexports.duplicate = duplicate;\nexports.extend = extend;\nexports.flatten = flatten;\nexports.foldMap = foldMap;\nexports.map = map;\nexports.mapLeft = mapLeft;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.fromOption = fromOption;\nexports.fromPredicate = fromPredicate;\nexports.filterOrElse = filterOrElse;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","ChainRec_1","require","pipeable_1","URI","left","e","_tag","right","a","fromNullable","toError","Error","String","tryCatch","f","onError","fold","onLeft","onRight","ma","isLeft","getShow","SE","SA","show","getEq","EL","EA","equals","x","y","isRight","getSemigroup","S","concat","getApplySemigroup","getApplyMonoid","M","empty","swap","orElse","getOrElse","elem","E","exists","predicate","parseJSON","JSON","parse","stringifyJSON","u","stringify","phantom","undefined","getWitherable","compact","separate","partitionMap","partition","filterMap","ob","filter","wither","F","traverseF","either","traverse","map","wilt","_E","sequence","reduce","foldMap","reduceRight","getValidation","of","ap","mab","chain","alt","fx","fy","getValidationSemigroup","getValidationMonoid","fa","b","bimap","fea","g","mapLeft","extend","wa","chainRec","tailRec","throwError","_a","pipeable","apFirst","apSecond","chainFirst","duplicate","flatten","fromOption","fromPredicate","filterOrElse"],"sources":["/home/chizaaa/Documents/code-jam/celo-hodler/code-jam/node_modules/fp-ts/lib/Either.js"],"sourcesContent":["\"use strict\";\n/**\n * @file Represents a value of one of two possible types (a disjoint union).\n *\n * An instance of `Either` is either an instance of `Left` or `Right`.\n *\n * A common use of `Either` is as an alternative to `Option` for dealing with possible missing values. In this usage,\n * `None` is replaced with a `Left` which can contain useful information. `Right` takes the place of `Some`. Convention\n * dictates that `Left` is used for failure and `Right` is used for success.\n *\n * For example, you could use `Either<string, number>` to detect whether a received input is a `string` or a `number`.\n *\n * ```ts\n * const parse = (errorMessage: string) => (input: string): Either<string, number> => {\n *   const n = parseInt(input, 10)\n *   return isNaN(n) ? left(errorMessage) : right(n)\n * }\n * ```\n *\n * `Either` is right-biased, which means that `Right` is assumed to be the default case to operate on. If it is `Left`,\n * operations like `map`, `chain`, ... return the `Left` value unchanged:\n *\n * ```ts\n * import { either } from 'fp-ts/lib/Either'\n *\n * either.map(right(12), double) // right(24)\n * either.map(left(23), double)  // left(23)\n * ```\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChainRec_1 = require(\"./ChainRec\");\nvar pipeable_1 = require(\"./pipeable\");\n/**\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure\n *\n * @since 2.0.0\n */\nfunction left(e) {\n    return { _tag: 'Left', left: e };\n}\nexports.left = left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure\n *\n * @since 2.0.0\n */\nfunction right(a) {\n    return { _tag: 'Right', right: a };\n}\nexports.right = right;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`\n *\n * @since 2.0.0\n */\nfunction fromNullable(e) {\n    return function (a) { return (a == null ? left(e) : right(a)); };\n}\nexports.fromNullable = fromNullable;\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexports.toError = toError;\n/**\n * Constructs a new `Either` from a function that might throw\n *\n * @example\n * import { Either, left, right, tryCatch } from 'fp-ts/lib/Either'\n *\n * const unsafeHead = <A>(as: Array<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: Array<A>): Either<Error, A> => {\n *   return tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n * }\n *\n * assert.deepStrictEqual(head([]), left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), right(1))\n *\n * @since 2.0.0\n */\nfunction tryCatch(f, onError) {\n    try {\n        return right(f());\n    }\n    catch (e) {\n        return left(onError(e));\n    }\n}\nexports.tryCatch = tryCatch;\n/**\n * @since 2.0.0\n */\nfunction fold(onLeft, onRight) {\n    return function (ma) { return (isLeft(ma) ? onLeft(ma.left) : onRight(ma.right)); };\n}\nexports.fold = fold;\n/**\n * @since 2.0.0\n */\nfunction getShow(SE, SA) {\n    return {\n        show: function (ma) { return (isLeft(ma) ? \"left(\" + SE.show(ma.left) + \")\" : \"right(\" + SA.show(ma.right) + \")\"); }\n    };\n}\nexports.getShow = getShow;\n/**\n * @since 2.0.0\n */\nfunction getEq(EL, EA) {\n    return {\n        equals: function (x, y) {\n            return x === y || (isLeft(x) ? isLeft(y) && EL.equals(x.left, y.left) : isRight(y) && EA.equals(x.right, y.right));\n        }\n    };\n}\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * appended using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/lib/Either'\n * import { semigroupSum } from 'fp-ts/lib/Semigroup'\n *\n * const S = getSemigroup<string, number>(semigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n *\n * @since 2.0.0\n */\nfunction getSemigroup(S) {\n    return {\n        concat: function (x, y) { return (isLeft(y) ? x : isLeft(x) ? y : right(S.concat(x.right, y.right))); }\n    };\n}\nexports.getSemigroup = getSemigroup;\n/**\n * `Apply` semigroup\n *\n * @example\n * import { getApplySemigroup, left, right } from 'fp-ts/lib/Either'\n * import { semigroupSum } from 'fp-ts/lib/Semigroup'\n *\n * const S = getApplySemigroup<string, number>(semigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), left('a'))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), left('b'))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n *\n * @since 2.0.0\n */\nfunction getApplySemigroup(S) {\n    return {\n        concat: function (x, y) { return (isLeft(x) ? x : isLeft(y) ? y : right(S.concat(x.right, y.right))); }\n    };\n}\nexports.getApplySemigroup = getApplySemigroup;\n/**\n * @since 2.0.0\n */\nfunction getApplyMonoid(M) {\n    return __assign(__assign({}, getApplySemigroup(M)), { empty: right(M.empty) });\n}\nexports.getApplyMonoid = getApplyMonoid;\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise\n *\n * @since 2.0.0\n */\nfunction isLeft(ma) {\n    switch (ma._tag) {\n        case 'Left':\n            return true;\n        case 'Right':\n            return false;\n    }\n}\nexports.isLeft = isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise\n *\n * @since 2.0.0\n */\nfunction isRight(ma) {\n    return isLeft(ma) ? false : true;\n}\nexports.isRight = isRight;\n/**\n * @since 2.0.0\n */\nfunction swap(ma) {\n    return isLeft(ma) ? right(ma.left) : left(ma.right);\n}\nexports.swap = swap;\n/**\n * @since 2.0.0\n */\nfunction orElse(onLeft) {\n    return function (ma) { return (isLeft(ma) ? onLeft(ma.left) : ma); };\n}\nexports.orElse = orElse;\n/**\n * @since 2.0.0\n */\nfunction getOrElse(onLeft) {\n    return function (ma) { return (isLeft(ma) ? onLeft(ma.left) : ma.right); };\n}\nexports.getOrElse = getOrElse;\n/**\n * @since 2.0.0\n */\nfunction elem(E) {\n    return function (a, ma) { return (isLeft(ma) ? false : E.equals(a, ma.right)); };\n}\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/lib/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nfunction exists(predicate) {\n    return function (ma) { return (isLeft(ma) ? false : predicate(ma.right)); };\n}\nexports.exists = exists;\n/**\n * Converts a JavaScript Object Notation (JSON) string into an object.\n *\n * @example\n * import { parseJSON, toError, right, left } from 'fp-ts/lib/Either'\n *\n * assert.deepStrictEqual(parseJSON('{\"a\":1}', toError), right({ a: 1 }))\n * assert.deepStrictEqual(parseJSON('{\"a\":}', toError), left(new SyntaxError('Unexpected token } in JSON at position 5')))\n *\n * @since 2.0.0\n */\nfunction parseJSON(s, onError) {\n    return tryCatch(function () { return JSON.parse(s); }, onError);\n}\nexports.parseJSON = parseJSON;\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n *\n * @example\n * import { stringifyJSON, toError, right, left } from 'fp-ts/lib/Either'\n *\n * assert.deepStrictEqual(stringifyJSON({ a: 1 }, toError), right('{\"a\":1}'))\n * const circular: any = { ref: null }\n * circular.ref = circular\n * assert.deepStrictEqual(stringifyJSON(circular, toError), left(new TypeError('Converting circular structure to JSON')))\n *\n * @since 2.0.0\n */\nfunction stringifyJSON(u, onError) {\n    return tryCatch(function () { return JSON.stringify(u); }, onError);\n}\nexports.stringifyJSON = stringifyJSON;\nvar phantom = undefined;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @since 2.0.0\n */\nfunction getWitherable(M) {\n    var empty = left(M.empty);\n    var compact = function (ma) {\n        return isLeft(ma) ? ma : ma.right._tag === 'None' ? left(M.empty) : right(ma.right.value);\n    };\n    var separate = function (ma) {\n        return isLeft(ma)\n            ? { left: ma, right: ma }\n            : isLeft(ma.right)\n                ? { left: right(ma.right.left), right: empty }\n                : { left: empty, right: right(ma.right.right) };\n    };\n    var partitionMap = function (ma, f) {\n        if (isLeft(ma)) {\n            return { left: ma, right: ma };\n        }\n        var e = f(ma.right);\n        return isLeft(e) ? { left: right(e.left), right: empty } : { left: empty, right: right(e.right) };\n    };\n    var partition = function (ma, p) {\n        return isLeft(ma)\n            ? { left: ma, right: ma }\n            : p(ma.right)\n                ? { left: empty, right: right(ma.right) }\n                : { left: right(ma.right), right: empty };\n    };\n    var filterMap = function (ma, f) {\n        if (isLeft(ma)) {\n            return ma;\n        }\n        var ob = f(ma.right);\n        return ob._tag === 'None' ? left(M.empty) : right(ob.value);\n    };\n    var filter = function (ma, predicate) {\n        return isLeft(ma) ? ma : predicate(ma.right) ? ma : left(M.empty);\n    };\n    var wither = function (F) {\n        var traverseF = exports.either.traverse(F);\n        return function (ma, f) { return F.map(traverseF(ma, f), compact); };\n    };\n    var wilt = function (F) {\n        var traverseF = exports.either.traverse(F);\n        return function (ma, f) { return F.map(traverseF(ma, f), separate); };\n    };\n    return {\n        URI: exports.URI,\n        _E: phantom,\n        map: exports.either.map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: filterMap,\n        partition: partition,\n        partitionMap: partitionMap,\n        traverse: exports.either.traverse,\n        sequence: exports.either.sequence,\n        reduce: exports.either.reduce,\n        foldMap: exports.either.foldMap,\n        reduceRight: exports.either.reduceRight,\n        wither: wither,\n        wilt: wilt\n    };\n}\nexports.getWitherable = getWitherable;\n/**\n * @since 2.0.0\n */\nfunction getValidation(S) {\n    return {\n        URI: exports.URI,\n        _E: phantom,\n        map: exports.either.map,\n        of: exports.either.of,\n        ap: function (mab, ma) {\n            return isLeft(mab)\n                ? isLeft(ma)\n                    ? left(S.concat(mab.left, ma.left))\n                    : mab\n                : isLeft(ma)\n                    ? ma\n                    : right(mab.right(ma.right));\n        },\n        chain: exports.either.chain,\n        alt: function (fx, f) {\n            if (isRight(fx)) {\n                return fx;\n            }\n            var fy = f();\n            return isLeft(fy) ? left(S.concat(fx.left, fy.left)) : fy;\n        }\n    };\n}\nexports.getValidation = getValidation;\n/**\n * @since 2.0.0\n */\nfunction getValidationSemigroup(SE, SA) {\n    return {\n        concat: function (fx, fy) {\n            return isLeft(fx)\n                ? isLeft(fy)\n                    ? left(SE.concat(fx.left, fy.left))\n                    : fx\n                : isLeft(fy)\n                    ? fy\n                    : right(SA.concat(fx.right, fy.right));\n        }\n    };\n}\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * @since 2.0.0\n */\nfunction getValidationMonoid(SE, SA) {\n    return {\n        concat: getValidationSemigroup(SE, SA).concat,\n        empty: right(SA.empty)\n    };\n}\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * @since 2.0.0\n */\nexports.either = {\n    URI: exports.URI,\n    map: function (ma, f) { return (isLeft(ma) ? ma : right(f(ma.right))); },\n    of: right,\n    ap: function (mab, ma) { return (isLeft(mab) ? mab : isLeft(ma) ? ma : right(mab.right(ma.right))); },\n    chain: function (ma, f) { return (isLeft(ma) ? ma : f(ma.right)); },\n    reduce: function (fa, b, f) { return (isLeft(fa) ? b : f(b, fa.right)); },\n    foldMap: function (M) { return function (fa, f) { return (isLeft(fa) ? M.empty : f(fa.right)); }; },\n    reduceRight: function (fa, b, f) { return (isLeft(fa) ? b : f(fa.right, b)); },\n    traverse: function (F) { return function (ma, f) {\n        return isLeft(ma) ? F.of(left(ma.left)) : F.map(f(ma.right), right);\n    }; },\n    sequence: function (F) { return function (ma) {\n        return isLeft(ma) ? F.of(left(ma.left)) : F.map(ma.right, right);\n    }; },\n    bimap: function (fea, f, g) { return (isLeft(fea) ? left(f(fea.left)) : right(g(fea.right))); },\n    mapLeft: function (fea, f) { return (isLeft(fea) ? left(f(fea.left)) : fea); },\n    alt: function (fx, fy) { return (isLeft(fx) ? fy() : fx); },\n    extend: function (wa, f) { return (isLeft(wa) ? wa : right(f(wa))); },\n    chainRec: function (a, f) {\n        return ChainRec_1.tailRec(f(a), function (e) {\n            return isLeft(e) ? right(left(e.left)) : isLeft(e.right) ? left(f(e.right.left)) : right(right(e.right.right));\n        });\n    },\n    throwError: left\n};\nvar _a = pipeable_1.pipeable(exports.either), alt = _a.alt, ap = _a.ap, apFirst = _a.apFirst, apSecond = _a.apSecond, bimap = _a.bimap, chain = _a.chain, chainFirst = _a.chainFirst, duplicate = _a.duplicate, extend = _a.extend, flatten = _a.flatten, foldMap = _a.foldMap, map = _a.map, mapLeft = _a.mapLeft, reduce = _a.reduce, reduceRight = _a.reduceRight, fromOption = _a.fromOption, fromPredicate = _a.fromPredicate, filterOrElse = _a.filterOrElse;\nexports.alt = alt;\nexports.ap = ap;\nexports.apFirst = apFirst;\nexports.apSecond = apSecond;\nexports.bimap = bimap;\nexports.chain = chain;\nexports.chainFirst = chainFirst;\nexports.duplicate = duplicate;\nexports.extend = extend;\nexports.flatten = flatten;\nexports.foldMap = foldMap;\nexports.map = map;\nexports.mapLeft = mapLeft;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.fromOption = fromOption;\nexports.fromPredicate = fromPredicate;\nexports.filterOrElse = filterOrElse;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}