{"ast":null,"code":"var _jsxFileName = \"/home/serial/Desktop/code-jam/src/pages/profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './profile.css';\nimport profile_banner from '../../assets/profile_banner.png';\nimport Nfts from '../../components/nfts/Nfts';\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useMarketContract } from \"../../hooks/useMarketContract\";\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const {\n    address,\n    connect,\n    performActions\n  } = useContractKit();\n  const marketplace = useMarketContract();\n  const [nfts, setNfts] = useState([]);\n  const [soldNfts, setSoldNfts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (marketplace) {\n      loadNFTs();\n    }\n  }, [marketplace]);\n\n  const loadNFTs = async () => {\n    setLoading(true);\n\n    try {\n      const data = await marketplace.methods.fetchMyNFTs().call();\n      console.log({\n        data\n      });\n      const items = await Promise.all(data.map(async i => {\n        const tokenURI = await marketplace.methods.tokenURI(i.tokenId).call();\n        const owner = await marketplace.methods.getNftOwner(i.tokenId).call();\n        const meta = await axios.get(tokenURI);\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n        return {\n          price,\n          tokenId: Number(i.tokenId),\n          seller: i.seller,\n          name: meta.data.name,\n          owner,\n          image: meta.data.image,\n          tokenURI\n        };\n      }));\n      setNfts(items);\n    } catch (e) {\n      console.log({\n        e\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile section__padding\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-banner\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profile_banner,\n          alt: \"banner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-pic\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://www.kindpng.com/picc/m/78-785827_user-profile-avatar-login-account-male-user-icon.png\",\n          alt: \"profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Hello!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-bottom\",\n      children: /*#__PURE__*/_jsxDEV(Nfts, {\n        nfts: nfts,\n        loading: loading,\n        title: \"Your Minted NFTs\",\n        relist: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"p7lCZpeaV5sVHglCkgFa3FCh0F4=\", false, function () {\n  return [useContractKit, useMarketContract];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","profile_banner","Nfts","useContractKit","useMarketContract","axios","ethers","Profile","address","connect","performActions","marketplace","nfts","setNfts","soldNfts","setSoldNfts","loading","setLoading","loadNFTs","data","methods","fetchMyNFTs","call","console","log","items","Promise","all","map","i","tokenURI","tokenId","owner","getNftOwner","meta","get","price","utils","formatUnits","toString","Number","seller","name","image","e"],"sources":["/home/serial/Desktop/code-jam/src/pages/profile/Profile.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './profile.css'\nimport profile_banner from '../../assets/profile_banner.png'\nimport Nfts from '../../components/nfts/Nfts'\nimport {useContractKit} from \"@celo-tools/use-contractkit\";\nimport {useMarketContract} from \"../../hooks/useMarketContract\";\nimport axios from \"axios\";\nimport {ethers} from \"ethers\";\n\nconst Profile = () => {\n\n    const {address, connect, performActions} = useContractKit()\n    const marketplace = useMarketContract()\n\n\n    const [nfts, setNfts] = useState([]);\n    const [soldNfts, setSoldNfts] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (marketplace) {\n            loadNFTs()\n        }\n    }, [ marketplace]);\n\n    const loadNFTs = async () => {\n        setLoading(true)\n        try {\n            const data = await marketplace.methods.fetchMyNFTs().call()\n            console.log({data})\n            const items = await Promise.all(data.map(async i => {\n                const tokenURI = await marketplace.methods.tokenURI(i.tokenId).call()\n\n                const owner = await marketplace.methods.getNftOwner(i.tokenId).call()\n                const meta = await axios.get(tokenURI)\n                let price = ethers.utils.formatUnits(i.price.toString(), 'ether')\n\n                return {\n                    price,\n                    tokenId: Number(i.tokenId),\n                    seller: i.seller,\n                    name: meta.data.name,\n                    owner,\n                    image: meta.data.image,\n                    tokenURI\n                }\n            }))\n\n            setNfts(items)\n        } catch (e) {\n            console.log({e})\n        } finally {\n            setLoading(false)\n        }\n\n\n    }\n\n\n    return (\n        <div className='profile section__padding'>\n            <div className=\"profile-top\">\n                <div className=\"profile-banner\">\n                    <img src={profile_banner} alt=\"banner\"/>\n                </div>\n                <div className=\"profile-pic\">\n                    <img\n                        src={\"https://www.kindpng.com/picc/m/78-785827_user-profile-avatar-login-account-male-user-icon.png\"}\n                        alt=\"profile\"/>\n                    <h3>Hello!</h3>\n                </div>\n            </div>\n            <div className=\"profile-bottom\">\n                {/*<div className=\"profile-bottom-input\">*/}\n                {/*  <input type=\"text\" placeholder='Search Item here' />*/}\n                {/*  <select>*/}\n                {/*    <option>Recently Listed</option>*/}\n                {/*    <option>Popular</option>*/}\n                {/*    <option>Low to High</option>*/}\n                {/*    <option>High to Low</option>*/}\n                {/*  </select>*/}\n                {/*</div>*/}\n                <Nfts nfts={nfts} loading={loading} title=\"Your Minted NFTs\" relist={true}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}