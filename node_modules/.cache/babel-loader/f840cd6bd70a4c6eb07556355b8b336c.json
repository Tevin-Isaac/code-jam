{"ast":null,"code":"import isArrayLike from './_isArrayLike.js';\nimport clone from './clone.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js'; // Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\n\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n\n  var sample = isArrayLike(obj) ? clone(obj) : values(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n\n  return sample.slice(0, n);\n}","map":{"version":3,"names":["isArrayLike","clone","values","getLength","random","sample","obj","n","guard","length","Math","max","min","last","index","rand","temp","slice"],"sources":["/home/serial/Desktop/code-jam/node_modules/underscore/modules/sample.js"],"sourcesContent":["import isArrayLike from './_isArrayLike.js';\nimport clone from './clone.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js';\n\n// Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n  var sample = isArrayLike(obj) ? clone(obj) : values(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n  return sample.slice(0, n);\n}\n"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,CAArB,EAAwBC,KAAxB,EAA+B;EAC5C,IAAID,CAAC,IAAI,IAAL,IAAaC,KAAjB,EAAwB;IACtB,IAAI,CAACR,WAAW,CAACM,GAAD,CAAhB,EAAuBA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAZ;IACvB,OAAOA,GAAG,CAACF,MAAM,CAACE,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAP,CAAV;EACD;;EACD,IAAIJ,MAAM,GAAGL,WAAW,CAACM,GAAD,CAAX,GAAmBL,KAAK,CAACK,GAAD,CAAxB,GAAgCJ,MAAM,CAACI,GAAD,CAAnD;EACA,IAAIG,MAAM,GAAGN,SAAS,CAACE,MAAD,CAAtB;EACAE,CAAC,GAAGG,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASL,CAAT,EAAYE,MAAZ,CAAT,EAA8B,CAA9B,CAAJ;EACA,IAAII,IAAI,GAAGJ,MAAM,GAAG,CAApB;;EACA,KAAK,IAAIK,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,CAA5B,EAA+BO,KAAK,EAApC,EAAwC;IACtC,IAAIC,IAAI,GAAGX,MAAM,CAACU,KAAD,EAAQD,IAAR,CAAjB;IACA,IAAIG,IAAI,GAAGX,MAAM,CAACS,KAAD,CAAjB;IACAT,MAAM,CAACS,KAAD,CAAN,GAAgBT,MAAM,CAACU,IAAD,CAAtB;IACAV,MAAM,CAACU,IAAD,CAAN,GAAeC,IAAf;EACD;;EACD,OAAOX,MAAM,CAACY,KAAP,CAAa,CAAb,EAAgBV,CAAhB,CAAP;AACD"},"metadata":{},"sourceType":"module"}