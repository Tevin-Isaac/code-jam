{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authorizeSigner = exports.attestationSecurityCode = void 0;\n\nfunction attestationSecurityCode(code) {\n  return {\n    types: {\n      EIP712Domain: [{\n        name: 'name',\n        type: 'string'\n      }, {\n        name: 'version',\n        type: 'string'\n      }],\n      AttestationRequest: [{\n        name: 'code',\n        type: 'string'\n      }]\n    },\n    primaryType: 'AttestationRequest',\n    domain: {\n      name: 'Attestations',\n      version: '1.0.0'\n    },\n    message: {\n      code: code\n    }\n  };\n}\n\nexports.attestationSecurityCode = attestationSecurityCode;\n\nvar authorizeSigner = function (_a) {\n  var account = _a.account,\n      signer = _a.signer,\n      chainId = _a.chainId,\n      role = _a.role,\n      accountsContractAddress = _a.accountsContractAddress;\n  return {\n    types: {\n      EIP712Domain: [{\n        name: 'name',\n        type: 'string'\n      }, {\n        name: 'version',\n        type: 'string'\n      }, {\n        name: 'chainId',\n        type: 'uint256'\n      }, {\n        name: 'verifyingContract',\n        type: 'address'\n      }],\n      AuthorizeSigner: [{\n        name: 'account',\n        type: 'address'\n      }, {\n        name: 'signer',\n        type: 'address'\n      }, {\n        name: 'role',\n        type: 'bytes32'\n      }]\n    },\n    primaryType: 'AuthorizeSigner',\n    domain: {\n      name: 'Celo Core Contracts',\n      version: '1.0',\n      chainId: chainId,\n      verifyingContract: accountsContractAddress\n    },\n    message: {\n      account: account,\n      signer: signer,\n      role: role\n    }\n  };\n};\n\nexports.authorizeSigner = authorizeSigner;","map":{"version":3,"sources":["../src/typed-data-constructors.ts"],"names":[],"mappings":";;;;;;;AAEA,SAAgB,uBAAhB,CAAwC,IAAxC,EAAoD;EAClD,OAAO;IACL,KAAK,EAAE;MACL,YAAY,EAAE,CACZ;QAAE,IAAI,EAAE,MAAR;QAAgB,IAAI,EAAE;MAAtB,CADY,EAEZ;QAAE,IAAI,EAAE,SAAR;QAAmB,IAAI,EAAE;MAAzB,CAFY,CADT;MAKL,kBAAkB,EAAE,CAAC;QAAE,IAAI,EAAE,MAAR;QAAgB,IAAI,EAAE;MAAtB,CAAD;IALf,CADF;IAQL,WAAW,EAAE,oBARR;IASL,MAAM,EAAE;MACN,IAAI,EAAE,cADA;MAEN,OAAO,EAAE;IAFH,CATH;IAaL,OAAO,EAAE;MACP,IAAI,EAAA;IADG;EAbJ,CAAP;AAiBD;;AAlBD,OAAA,CAAA,uBAAA,GAAA,uBAAA;;AAoBO,IAAM,eAAe,GAAG,UAAC,EAAD,EAY9B;MAXC,OAAO,GAAA,EAAA,CAAA,O;MACP,MAAM,GAAA,EAAA,CAAA,M;MACN,OAAO,GAAA,EAAA,CAAA,O;MACP,IAAI,GAAA,EAAA,CAAA,I;MACJ,uBAAuB,GAAA,EAAA,CAAA,uB;EAOF,OAAC;IACtB,KAAK,EAAE;MACL,YAAY,EAAE,CACZ;QAAE,IAAI,EAAE,MAAR;QAAgB,IAAI,EAAE;MAAtB,CADY,EAEZ;QAAE,IAAI,EAAE,SAAR;QAAmB,IAAI,EAAE;MAAzB,CAFY,EAGZ;QAAE,IAAI,EAAE,SAAR;QAAmB,IAAI,EAAE;MAAzB,CAHY,EAIZ;QAAE,IAAI,EAAE,mBAAR;QAA6B,IAAI,EAAE;MAAnC,CAJY,CADT;MAOL,eAAe,EAAE,CACf;QAAE,IAAI,EAAE,SAAR;QAAmB,IAAI,EAAE;MAAzB,CADe,EAEf;QAAE,IAAI,EAAE,QAAR;QAAkB,IAAI,EAAE;MAAxB,CAFe,EAGf;QAAE,IAAI,EAAE,MAAR;QAAgB,IAAI,EAAE;MAAtB,CAHe;IAPZ,CADe;IActB,WAAW,EAAE,iBAdS;IAetB,MAAM,EAAE;MACN,IAAI,EAAE,qBADA;MAEN,OAAO,EAAE,KAFH;MAGN,OAAO,EAAA,OAHD;MAIN,iBAAiB,EAAE;IAJb,CAfc;IAqBtB,OAAO,EAAE;MACP,OAAO,EAAA,OADA;MAEP,MAAM,EAAA,MAFC;MAGP,IAAI,EAAA;IAHG;EArBa,CAAD;AA0BrB,CAtCK;;AAAM,OAAA,CAAA,eAAA,GAAe,eAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.authorizeSigner = exports.attestationSecurityCode = void 0;\nfunction attestationSecurityCode(code) {\n    return {\n        types: {\n            EIP712Domain: [\n                { name: 'name', type: 'string' },\n                { name: 'version', type: 'string' },\n            ],\n            AttestationRequest: [{ name: 'code', type: 'string' }],\n        },\n        primaryType: 'AttestationRequest',\n        domain: {\n            name: 'Attestations',\n            version: '1.0.0',\n        },\n        message: {\n            code: code,\n        },\n    };\n}\nexports.attestationSecurityCode = attestationSecurityCode;\nvar authorizeSigner = function (_a) {\n    var account = _a.account, signer = _a.signer, chainId = _a.chainId, role = _a.role, accountsContractAddress = _a.accountsContractAddress;\n    return ({\n        types: {\n            EIP712Domain: [\n                { name: 'name', type: 'string' },\n                { name: 'version', type: 'string' },\n                { name: 'chainId', type: 'uint256' },\n                { name: 'verifyingContract', type: 'address' },\n            ],\n            AuthorizeSigner: [\n                { name: 'account', type: 'address' },\n                { name: 'signer', type: 'address' },\n                { name: 'role', type: 'bytes32' },\n            ],\n        },\n        primaryType: 'AuthorizeSigner',\n        domain: {\n            name: 'Celo Core Contracts',\n            version: '1.0',\n            chainId: chainId,\n            verifyingContract: accountsContractAddress,\n        },\n        message: {\n            account: account,\n            signer: signer,\n            role: role,\n        },\n    });\n};\nexports.authorizeSigner = authorizeSigner;\n//# sourceMappingURL=typed-data-constructors.js.map"]},"metadata":{},"sourceType":"script"}