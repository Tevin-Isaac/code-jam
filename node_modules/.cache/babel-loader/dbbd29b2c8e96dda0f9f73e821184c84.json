{"ast":null,"code":"\"use strict\"; // Copyright (c) 2017 Gustaf Andersson (github.com/gustf/js-levenshtein)\n// Distributed under the MIT license github.com/gustf/js-levenshtein/blob/master/LICENSE\n// Adapted for use in TypeScript by cLabs, 2021\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.levenshteinDistance = void 0;\n\nvar _min = function (d0, d1, d2, bx, ay) {\n  return d0 < d1 || d2 < d1 ? d0 > d2 ? d2 + 1 : d0 + 1 : bx === ay ? d1 : d1 + 1;\n};\n\nfunction levenshteinDistance(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  if (a.length > b.length) {\n    var tmp = a;\n    a = b;\n    b = tmp;\n  }\n\n  var la = a.length;\n  var lb = b.length;\n\n  while (la > 0 && a.charCodeAt(la - 1) === b.charCodeAt(lb - 1)) {\n    la--;\n    lb--;\n  }\n\n  var offset = 0;\n\n  while (offset < la && a.charCodeAt(offset) === b.charCodeAt(offset)) {\n    offset++;\n  }\n\n  la -= offset;\n  lb -= offset;\n\n  if (la === 0 || lb < 3) {\n    return lb;\n  }\n\n  var x = 0;\n  var y;\n  var d0;\n  var d1;\n  var d2;\n  var d3;\n  var dd;\n  var dy;\n  var ay;\n  var bx0;\n  var bx1;\n  var bx2;\n  var bx3;\n  var vector = [];\n\n  for (y = 0; y < la; y++) {\n    vector.push(y + 1);\n    vector.push(a.charCodeAt(offset + y));\n  }\n\n  var len = vector.length - 1;\n\n  for (; x < lb - 3;) {\n    bx0 = b.charCodeAt(offset + (d0 = x));\n    bx1 = b.charCodeAt(offset + (d1 = x + 1));\n    bx2 = b.charCodeAt(offset + (d2 = x + 2));\n    bx3 = b.charCodeAt(offset + (d3 = x + 3));\n    dd = x += 4;\n\n    for (y = 0; y < len; y += 2) {\n      dy = vector[y];\n      ay = vector[y + 1];\n      d0 = _min(dy, d0, d1, bx0, ay);\n      d1 = _min(d0, d1, d2, bx1, ay);\n      d2 = _min(d1, d2, d3, bx2, ay);\n      dd = _min(d2, d3, dd, bx3, ay);\n      vector[y] = dd;\n      d3 = d2;\n      d2 = d1;\n      d1 = d0;\n      d0 = dy;\n    }\n  }\n\n  for (; x < lb;) {\n    bx0 = b.charCodeAt(offset + (d0 = x));\n    dd = ++x;\n\n    for (y = 0; y < len; y += 2) {\n      dy = vector[y];\n      vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);\n      d0 = dy;\n    }\n  }\n\n  return dd;\n}\n\nexports.levenshteinDistance = levenshteinDistance;","map":{"version":3,"sources":["../src/levenshtein.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright (c) 2017 Gustaf Andersson (github.com/gustf/js-levenshtein)\n// Distributed under the MIT license github.com/gustf/js-levenshtein/blob/master/LICENSE\n// Adapted for use in TypeScript by cLabs, 2021\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.levenshteinDistance = void 0;\nvar _min = function (d0, d1, d2, bx, ay) {\n    return d0 < d1 || d2 < d1 ? (d0 > d2 ? d2 + 1 : d0 + 1) : bx === ay ? d1 : d1 + 1;\n};\nfunction levenshteinDistance(a, b) {\n    if (a === b) {\n        return 0;\n    }\n    if (a.length > b.length) {\n        var tmp = a;\n        a = b;\n        b = tmp;\n    }\n    var la = a.length;\n    var lb = b.length;\n    while (la > 0 && a.charCodeAt(la - 1) === b.charCodeAt(lb - 1)) {\n        la--;\n        lb--;\n    }\n    var offset = 0;\n    while (offset < la && a.charCodeAt(offset) === b.charCodeAt(offset)) {\n        offset++;\n    }\n    la -= offset;\n    lb -= offset;\n    if (la === 0 || lb < 3) {\n        return lb;\n    }\n    var x = 0;\n    var y;\n    var d0;\n    var d1;\n    var d2;\n    var d3;\n    var dd;\n    var dy;\n    var ay;\n    var bx0;\n    var bx1;\n    var bx2;\n    var bx3;\n    var vector = [];\n    for (y = 0; y < la; y++) {\n        vector.push(y + 1);\n        vector.push(a.charCodeAt(offset + y));\n    }\n    var len = vector.length - 1;\n    for (; x < lb - 3;) {\n        bx0 = b.charCodeAt(offset + (d0 = x));\n        bx1 = b.charCodeAt(offset + (d1 = x + 1));\n        bx2 = b.charCodeAt(offset + (d2 = x + 2));\n        bx3 = b.charCodeAt(offset + (d3 = x + 3));\n        dd = x += 4;\n        for (y = 0; y < len; y += 2) {\n            dy = vector[y];\n            ay = vector[y + 1];\n            d0 = _min(dy, d0, d1, bx0, ay);\n            d1 = _min(d0, d1, d2, bx1, ay);\n            d2 = _min(d1, d2, d3, bx2, ay);\n            dd = _min(d2, d3, dd, bx3, ay);\n            vector[y] = dd;\n            d3 = d2;\n            d2 = d1;\n            d1 = d0;\n            d0 = dy;\n        }\n    }\n    for (; x < lb;) {\n        bx0 = b.charCodeAt(offset + (d0 = x));\n        dd = ++x;\n        for (y = 0; y < len; y += 2) {\n            dy = vector[y];\n            vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);\n            d0 = dy;\n        }\n    }\n    return dd;\n}\nexports.levenshteinDistance = levenshteinDistance;\n//# sourceMappingURL=levenshtein.js.map"]},"metadata":{},"sourceType":"script"}